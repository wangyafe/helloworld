1.自顶向下的学习方法：不要一上来就去看源码，而是要基本掌握了功能、原理、关键设计之后再去看源码，看源码的主要目的是为了学习其代码的写作方式，以及关键技术的实现
 1.1 Redis的RDB持久化模式“会将当前内存中的数据库快照保存到磁盘文件中”，在Linux平台上其实就是fork一个子进程来保存就可以了；那为何fork子进程就生成了数据库快照了呢？这又和Linux的父子进程机制以及copy-on-write技术相关了
2.不要只盯着数据结构和算法 Nginx使用红黑树来管理定时器（了解即可 除非有修改需求）
3.1.安装（1.系统的依赖组件 2.安装目录会提供一些使用和运行的基本信息 3.系统提供了哪些工具方便我们使用）
 3.2 运行（1.命令行 2.配置文件）
 3.3 原理研究（1.关键特性的基本实现原理 2.优缺点对比分析）
 3.4 测试 3.5 源码研究（1.不建议通读所有源码 2.明确目的去研究源码，做到有的放矢）
4.47如何高效的学习开源项目（下） https://www.toutiao.com/article/7141210298849149473/?log_from=eb7ebb424afd9_1663239559669 https://www.toutiao.com/article/7141190789996020259/?log_from=0c5fd21cbaeca_1662902484192
