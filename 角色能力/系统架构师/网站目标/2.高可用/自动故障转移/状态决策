1.paxos算法
描述：数据库集群同时对外提供服务（和冷备、读写分离有区别） 若两个客户端同时修改不同节点的同一个值 出现数据不一致的根本原因是出现了数据的覆盖现象，因为在节点内部无法确认客户端层面数据请求的先后顺序。
大白话理解“最晦涩”的Paxos算法及在数据库高可用上的使用(每个节点会担任三个角色1.proposer2.acceptor3.learner分为三步：1.prepare 将这次修改的proposal及版本号发送给acceptor 如果版本号为大则返回 否则拒绝只有收到半数以上的响应可进入下一阶段 2.accept 统一数据 3.将决策通知各个learner 终止这次选举) https://database.51cto.com/art/201801/563334.htm
2.raft算法
 2.0 多节点数据如何复制:1.主从复制 2.去中心化复制 
 2.1 主从复制，那么问题就来了，1.谁是主节点，谁是从节点（选举） 2.数据复制细节是怎样的（日志复制） 3.异常情况如何处理？（安全性）
 2.2 聊聊Raft https://juejin.cn/post/7051052407115448356
3.zab协议
