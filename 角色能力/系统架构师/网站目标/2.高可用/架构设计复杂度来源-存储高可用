1.高可用状态决策（无论是计算高可用还是存储高可用，根本都是状态决策，即系统需要能够判断当前的状态是正常还是异常，如果出现了异常就要采取行动来保证高可用）
 1.决策方式主要有独裁式（决策者故障）
 2.协商式（连接中断 两者的信息交换出现问题）
 3.民主式（多个独立的个体通过投票的方式来进行状态决策）
  3.1 ZooKeeper集群在选举leader使用
  3.2 民主式决策还有一个固有的缺陷：脑裂（原来统一的集群因为连接中断，造成了两个独立分隔的子集群，每个子集群单独进行选举，于是选出了2个主机）
  3.3 投票节点数必须超过系统总节点数一半规则（解决了脑裂问题 ，但不能解决真的节点故障）
2.架构设计复杂度来源-存储高可用 https://www.toutiao.com/article/7128299595674731021/?log_from=abe44c1e3a748_1662365607558
