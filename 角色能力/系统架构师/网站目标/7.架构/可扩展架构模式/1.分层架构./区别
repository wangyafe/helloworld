1.mvc是贫血模型 是面向过程的编码风格（行为和状态分离到不同的对象 破坏了封装特性）
2.但 MVC 是典型的面向过程风格的设计，不适合复杂的系统，比如金融类系统、账务核算系统
 2.1 DDD 架构把数据和操作封装在一起，对数据的操作可以复用，是面向对象风格的设计，比较适合复杂的业务系统
3.越复杂的系统，对代码（1.复用性 2.易维护）要求就越高，我们就越应该花更多的时间和精力在前期设计上
 3.1 DDD 开发模式，正好需要我们前期做大量的业务调研、领域模型设计，所以它更加适合这种复杂系统的开发
4.基于充血模型的 DDD 开发模式跟传统开发模式相比，主要区别在 Service 层 
 4.1 在基于充血模型的开发模式下，我们将部分原来在 Service 类中的业务逻辑移动到了一个充血的 Domain 领域模型中，让 Service 类的实现依赖这个 Domain 类
5.都在聊 DDD，到底哪里超越了MVC? https://www.cnblogs.com/javastack/p/15502751.html
 5.1 MVC与DDD https://blog.csdn.net/flandersfields/article/details/107307297
 5.2 Web 开发选 MVC 还是 DDD？ https://www.51cto.com/article/699847.html
