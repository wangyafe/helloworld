1. 分布式事务(1)---2PC和3PC原理（建立统一协调者） https://www.cnblogs.com/qdhxhz/p/11167025.html
  1.2pc问题：1.阻塞 2.协调者崩溃 导致参与者阻塞  
  1.3pc改进：1.先获取数据库锁 询问是否可以进行commit操作 2.在preCommit阶段引入 参与者超时机制（预提交拆分为1.询问提交和预提交）
  1.4 （Commit失败）只要 TC 决定要提交，即使 A/B 宕机， 没有收到 TC 的 Commit 指令， 只要 A/B 被修复重启， A 和 B 都必须有能力成功完成提交操作
   1.4.1 当 TC 收到 A 和 B 响应 “Yes” 后， 做出了 “commit” 的决定， 向 A /B 发送指令或， 并不需要再等待 A/B 的响应， 可以直接向 client 返回成功
  1.5正确理解二阶段提交（Two-Phase Commit） https://blog.csdn.net/lengxiao1993/article/details/88290514
2.三阶段提交主要解决了阻塞问题和协调者单点故障问题。第三阶段时，如果参与者无法及时收到协调者的消息，可以在超时后自动进行提交
 2.1 但是当协调者发出的回滚消息未被部分参与者收到时，会出现不一致的情况。
 2.2 其实，无论两阶段还是三阶段提交，都只是一定程度上缓解了提交冲突的问题，并无法确保系统的一致性。首个有效的共识算法是后来提出的 Paxos 算法
 （3pc改动点）
 2.3 引入超时机制。（超时提交策略，当第三阶段参与者等待协调者超时后会提交事务，解决参与者同步阻塞问题，同时能在发生单点故障时，继续达成一致）
 2.4 在第一阶段和第二阶段中插入一个准备阶段。（也是为了减少同步阻塞的发生范围 1.获取数据库锁 2.执行事务）
3.https://yeasy.gitbook.io/blockchain_guide/04_distributed_system/acid
 3.1 2pc和3pc的优缺点比较（同步阻塞、单点故障、数据不一致） https://blog.csdn.net/qq_26222859/article/details/52067011
