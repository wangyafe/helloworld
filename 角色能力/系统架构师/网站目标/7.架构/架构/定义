1.架构是（1.系统组织结构 2.组件及联系 3. 原则）的组合
2.从更偏向实践的角度对架构进行阐述。核心思想是软件系统的架构包括以下组合元素：
 1.结构：应用系统所选择的架构风格，比如（1.单体多模块 2.微服务 3.soa 4.pipe&filter管道过滤模式 5.微内核）
 2.架构属性：系统的非功能性属性，比如（1.高性能 2.高可用 3.可扩展 4.可伸缩 5.安全性 6.敏捷性）
 3.架构决策：系统设计过程中重要的架构决策
 4.设计原则：设计过程中的指导性原则
3.比较典型架构决策包括但不限于 1.直接影响高优先级的架构属性 2.修改对外接口：对外提供的接口修改往往需要进行充分影响分析 3.引入或者移除依赖：依赖的加入和移除往往标示着组件能力的引进和废弃
  4.改变系统的通用结构：工程结构是应用架构的重要维度之一 5.迫使研发人员改变开发方式 6.接受战略性技术债：重构影响较大的技术债往往对现有系统会有较大影响
4.架构设计与程序设计的边界
 4.1 二者不能完全割裂，而是需要在实现过程中进行双向反馈
 4.2 在进行架构边界判定时要注意一个至关重要的因子：上下文
 4.3 如果前上下文，我们非常关注系统的扩展性，该架构属性是我们高优先级的架构属性，那么，核心模块的策略模式的应用可以看作是架构设计的范畴
 4.4 而如果上下文中扩展性不是我们关注的高优先级的架构属性，相比我们更关注性能，那么，这种代码级的设计模式选择应该属于架构设计的范畴之外
5.架构模式（CQRS）与架构风格
6.职业生涯的早期，应该关注于自身知识储备的增长，并保持技术深度
 6.1 架构师关注知识广度（需要做架构决策）
7.探寻软件构架的本质 https://www.toutiao.com/article/7155102028069552681/?log_from=324c8069f0a3b_1667653681617
