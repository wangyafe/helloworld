1.低成本 2.规模 3.高性能 4.高可用 5.可扩展 6.可伸缩 7.安全性 8.敏捷性
2.同一个方案要解决不同的复杂性，架构设计时可能会矛盾。
 2.1 例如，提升系统可用性，需要将数据及时存储到硬盘上，但是硬盘刷盘反过来又会影响系统性能
3.18架构设计第一步识别复杂度（上） https://www.toutiao.com/article/7132025205282701862/?log_from=af83e349cad0a_1662375765348
4.19架构设计第一步识别复杂度（下） https://www.toutiao.com/article/7132040131279946251/?log_from=ff54b485ed7f9_1662377302119
 4.1 常见系统的性能量级需要熟知，例如Nginx负载均衡性能是3万左右，Redis的读取性能10万左右，Redis写性能8万左右，kafka号称百万级，ZooKeeper写入读取2万以上，http请求访问大概在2万左右
