1.工作原理（1.对称解密 2.非对称加密）客户端根据公钥1生成一个私钥2，这个私钥2用来加密和解密请求信息。使用公钥1对私钥2进行加密，回传给服务端。服务端用私钥1对该信息解密，得到私钥2。至此，客户端和服务端都已经有了私钥2
2.程序员必会基础：证书、根证书、CA、证书不受信任(1.不能阻止中间人攻击 2.向CA查看证书的合法性 3.CA的合法性是通过根证书) https://www.toutiao.com/i6733836824415846915/?timestamp=1642875915&app=news_article&use_new_style=1&req_id=202201230225150101501610290C995E75&share_token=bdd97e99-5a99-4d9c-b74c-aa234ec266fc&group_id=6733836824415846915
3.字节一面：HTTPS 一定安全可靠吗？ https://www.toutiao.com/article/7133393922679751207/?app=news_article&timestamp=1660892296&use_new_style=1&req_id=202208191458150101581560120B09A6A1&group_id=7133393922679751207&tt_from=android_share&utm_medium=toutiao_android&utm_campaign=client_share&share_token=4c3bb5f4-fd7e-4821-962a-d5f66e3c40dc&source=m_redirect
 3.1 验证证书时 提示该证书存在问题 用户继续浏览该网站
 3.2 中间服务器 导入了中间人的根证书 使得验证证书通过
 3.3 验证证书（存在一个证书信任链的问题）：1.用户 2.OS/browser 3.根证书（1.客户端根据证书中的签发者一直追溯到根证书 2.验证预载于根证书清单上）4.中间证书（验证是否预载） 5.信任证书
 3.4 抓包工具能截取 HTTPS 数据 工作原理和中间人一致（导入根证书）
4.避免被中间人抓取数据
 4.1 认证的关键在于私钥
 4.2 HTTPS 是单向认证，客户端只会验证了服务端的身份，但是服务端并不会验证客户端的身份
 4.3 用了双向认证方式，不仅客户端会验证服务端的身份，而且服务端也会验证客户端的身份（服务端颁证书给客户端）
5. 
