特殊字符   替代符号（红色基本为常用的）

     &            &amp;

     <            &lt;

     >            &gt;

     "             &quot;

     '              &apos;


小于等于    a<=b                 a &lt;= b      a <![CDATA[<= ]]>b

大于等于    a>=b                 a &gt;= b      a <![CDATA[>= ]]>b

不等于        a!=ba <![CDATA[ <> ]]>b      a <![CDATA[!= ]]>b


例子：<if test="provinceId != null">
AND <![CDATA[ province_id = #{provinceId} ]]>
</if>
<if test="id != null">
AND <![CDATA[ id <> #{id} ]]>
</if>
https://blog.csdn.net/buyaoshuohua1/article/details/74991913
2.批量操作数据库 https://blog.csdn.net/weixin_42765975/article/details/99688662?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control
3.mysql8.0数据库配置 server.port=1999
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/booking?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123
4.  <delete id="deleteByUserIds">
        <foreach collection="users" index="index" item="id" separator=";"  open="" close="">
            UPDATE t_rel_agent_skill_group
            <set>
                data_status = '1',
                gmt_modified=now()
            </set>
            <where>
                user_id = #{id}
                and skill_group_id = #{skillGroupId}
                and data_status = '0'
            </where>
        </foreach>
    </delete>
 5.  <insert id="saveBatchRecord" parameterType="list">
        insert into t_rel_agent_skill_group(user_id, skill_group_id, skill_level, operator_id,
                                            data_status, gmt_create, gmt_modified)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.userId}, #{item.skillGroupId}, #{item.skillLevel}, #{item.operatorId}, #{item.dataStatus}, now(), now())
        </foreach>
    </insert>
6. <select id="selectListByUsers" parameterType="list" resultMap="BaseResultMap">
        select
        tru.id,
        tru.alipay_account,
        tru.domain_account_id,
        tru.instance_id,
        tru.ram_id,
        tru.user_id,
        tru.login_name,
        tru.password,
        tru.user_name,
        tru.display_name,
        tru.access_key_id,
        tru.access_key_secret,
        tru.ext_info,
        tru.status,
        tru.email,
        tru.phone,
        tru.private_out_bound_number_id,
        tru.operator_id,
        tru.skill_group_ids,
        tru.role_ids,
        tru.alipay_user_id,
        tru.gmt_create,
        tru.gmt_modified
        from
        t_ram_user tru
        where user_id in
        <foreach collection="list" item="item" open="(" close=") " separator=",">
            #{item}
        </foreach>
    </select>
 7.    <update id="updateRamUserByUserIds" parameterType="list">
        <foreach collection="list" index="index" item="id" separator=";"  open="" close="">
        UPDATE t_ram_user
        <set>
            skill_group_ids = #{id.skillGroupIds},
            gmt_modified=now()
        </set>
        <where>
            user_id = #{id.userId}
        </where>
        </foreach>
    </update>
8.springboot连接数据库模板 https://github.com/Ghohankawk/spring-boot-api-template.git
9.框架的本质分析——Mybatis https://segmentfault.com/a/1190000015658564
10.这样看 mybatis，谁都会分析源码！ https://xie.infoq.cn/article/2f998541f14289c8d3851fbb9
11.Mybatis中强大的resultMap(字段映射 集合的嵌套 Select 查询) https://juejin.cn/post/6844903858477481992#heading-6
