0.单机问题域
 0.1 一对一（一个触发一个执行） 消除ifelse
 0.2 一对多（一个触发多个执行 如订单支付完成触发库存、物流、积分等功能） 事务
1.分布式问题域
 1.1 一对多（一个触发多个执行 如订单支付完成触发库存、物流、积分等功能） 事件驱动 分布式消息队列
2.if…else过多（单机问题域）
 2.1 有限状态机 （复杂业务场景导致if...else过多）
 2.2 表驱动（通过不同的参数访问不同的类）状态和处理作为key~value放入map 当前状态和事件两者组合与处理函数的一种对应关系 最后状态转移
 2.3 策略模式和多态（一个类中的多个方法都有过多if…else 判断）
 2.4 事件驱动（事件驱动通常是一对多（一个触发多个执行） 事件驱动可用于如订单支付完成触发库存、物流、积分等功能） 
   2.4.0 分布式消息队列
   2.4.1 表驱动通常是一对一的关系；事件驱动通常是一对多；
   2.4.2 表驱动中，触发和执行通常是强依赖；事件驱动中，触发和执行是弱依赖
 2.5 注解驱动
 2.6 责任链模式（if…else 中的条件表达式灵活多变，无法将条件中的数据抽象为表格并用统一的方式进行判断时，这时应将对条件的判断权交给每个功能组件） 用链的形式将这些组件串联起来，形成完整的功能
 2.7 Optional（ if…else 是由非空检查导致）optional.ifPresentOrElse
 2.8 Assert(参数验证)  Spring、Apache Commons 都提供了工具类
3.if else复合嵌套过深
 1.抽取方法 2.卫语句（即if return或者break continue）
4.if…else 表达式过于复杂
 1.抽取方法 2.移动方法
5.如何干掉java中的if...else... https://blog.csdn.net/a13935302660/article/details/100652295?spm=1001.2101.3001.6650.8&utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-8-100652295-blog-102663917.wap_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-8-100652295-blog-102663917.wap_relevant_multi_platform_whitelistv1&share_token=e0a770c7-65a6-4f49-ba06-a04093093e36
 5.1 可以拆解或合并执行 变为单机问题或者分布式问题（1.把不同的处理函数放入不同的应用中 2.订阅消息队列 3.执行处理函数）
6.意义：if…else 往往意味着这段代码违反了违反单一职责原则和开闭原则 使用依赖倒置原则
