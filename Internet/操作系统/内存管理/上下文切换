1. Linux 是一个多任务操作系统，它能支持远大于 CPU 数量的任务同时运行
 1.1 但实际上同一时刻只会有 CPU 数量的进程在运行，等 CPU 时间片到了之后，进程调度器就会把 CPU 资源分配给其他进程。
 1.2 在这个过程中就会涉及到进程之间的切换，这时候就需要将当前进程的上下文信息保存下来，随后加载被调度进程的上下文信息，这就是上下文切换
 1.3 上下文信息既包括虚拟内存、栈、全局变量等用户态的资源，也包括内核堆栈、寄存器等内核态的资源
2.上下文切换可能会包含用户态资源和内核态资源。
3.三种上下文切换类型，即：进程上下文切换、线程上下文切换、中断上下文切换，并分析其切换包括的资源类型。
4.vmstat 命令、pidstat 命令、/proc/interrupts 三种分析工具。其中 vmstat 命令用户查看系统整体上下文切换情况，pidstat 命令用户查看进程的上下文切换情况，/proc/interrupts 文件用户查看中断类型及详细情况。
5.解释了合理的上下文切换次数应该是数百到一万每秒以内。但具体的问题排查，还需要根据上下文切换类型去分析
6.怒啃 24 小时，终于搞懂linux系统上下文切换 https://www.toutiao.com/article/7140527671716364837/?app=news_article&timestamp=1664348835&use_new_style=1&req_id=20220928150714010208105144163249B9&group_id=7140527671716364837&tt_from=android_share&utm_medium=toutiao_android&utm_campaign=client_share&share_token=a5a6b067-7264-4f4e-a468-9e47fe45c5ef&source=m_redirect
 6.1 自愿上下文切换（voluntary context switches），是指进程无法获取所需资源，导致的上下文切换。比如说， I/O、内存等系统资源不足时，就会发生自愿上下文切换。
 6.2 非自愿上下文切换（non voluntary context switches），则是指进程由于时间片已到等原因，被系统强制调度，进而发生的上下文切换。比如说，大量进程都在争抢 CPU 时，就容易发生非自愿上下文切换
