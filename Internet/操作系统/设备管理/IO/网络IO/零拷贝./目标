0.解决目标：1.数据拷贝 2.用户态和内核态的切换
 0.3 搞明白什么是零拷贝，就是这么简单 https://www.toutiao.com/article/7271060286960960000/?log_from=219e772cfbe16_1712766595332
1.从磁盘复制数据到内核态内存；
 1.2 从内核态内存复制到用户态内存；
 1.3 然后从用户态内存复制到网络驱动的内核态内存；
 1.4 最后是从网络驱动的内核态内存复制到网卡中进行传输。
 1.5 所以，可以通过零拷贝的方式，减少用户态与内核态的上下文切换和内存拷贝的次数，用来提升I/O的性能。零拷贝比较常见的实现方式是mmap，这种机制在Java中是通过MappedByteBuffer实现的
2.一定要收藏的RocketMQ超全指南 https://heapdump.cn/article/3801373
3.传统 IO 流程会经过如下两个过程：
 1.数据准备阶段：数据从硬件到内核空间
 2.数据拷贝阶段：数据从内核空间到用户空间
 3.零拷贝：1.指数据无需从硬件到内核空间或从内核空间到用户空间 2.正常拷贝不经过cpu 是DMA（内核将数据读取的大部分数据读取操作都交个了 DMA 控制器，而空出来的资源就可以去处理其他的任务了）
 4.虚拟内存 & I/O & 零拷贝总结 https://www.toutiao.com/article/7148032464730997279/?app=news_article&timestamp=1664293294&use_new_style=1&req_id=202209272341330101511430470C25A55E&group_id=7148032464730997279&tt_from=android_share&utm_medium=toutiao_android&utm_campaign=client_share&share_token=96b59e46-da4d-43a1-8e07-e144736d6f4e&source=m_redirect
