线程通过以下几个方面与进程确立关系：(控制块位于内核空间)
1. 进程控制块（PCB）：每个进程都有一个进程控制块，其中包含了进程的相关信息，如进程标识符、状态、优先级等。线程通常与进程的 PCB 相关联，通过 PCB 来建立与进程的关系。
2. 地址空间：进程拥有独立的地址空间，包括代码段、数据段等。线程共享进程的地址空间，这意味着线程可以访问进程中的代码和数据。
3. 资源共享：线程共享进程的资源，如打开的文件、内存等。通过共享这些资源，线程与进程之间建立了紧密的联系。
4. 线程控制块（TCB）：除了进程的 PCB 外，每个线程还有自己的线程控制块，其中包含了线程的相关信息，如线程标识符、堆栈指针、寄存器状态等。T
 4.1 TCB 与进程的 PCB 相结合，确立了线程在进程中的地位和关系。
5. 调度机制：操作系统的调度器负责调度线程的执行。在调度过程中，线程与进程一起参与调度决策，共同竞争 CPU 资源。 通过以上几个方面，线程与进程之间建立了密切的关系。线程作为进程的一部分，共享进程的资源，并在进程的控制下进行并发执行。 这种关系使得线程能够高效地利用进程的资源，实现并发处理和提高系统的性能。同时，进程提供了线程之间的隔离和保护，确保线程之间的独立性和安全性。 需要注意的是，具体的实现方式可能因操作系统和编程语言的不同而有所差异。但总体来说，线程与进程之间的关系是通过操作系统的内部机制来确立和管理的。如果你想深入了解特定操作系统或编程语言中的线程和进程关系，可以参考相关的文档和资料。