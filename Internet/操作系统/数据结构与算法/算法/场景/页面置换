（1.内存管理 2.淘汰内存）页面置换是操作系统中用于管理内存资源的一种算法，当内存空间不足时，操作系统需要从内存中移出一部分内容，以便为新的内容腾出空间
 1.1 页面置换算法的目标是以最低的页面置换频率（即缺页率最低）来管理内存。常见的页面置换算法包括：12

最佳置换算法（OPT）：这是一种理想情况下的页面置换算法，它选择以后不会再使用的页面进行替换。这个算法无法实现，因为它需要预知未来的页面访问情况，但它可以用来衡量其他算法的性能。

先进先出置换算法（FIFO）：这种算法选择最早调入内存的页面进行替换。它易于理解和编程，但在实际使用中性能并不总是十分理想，因为它可能会导致经常使用的页面被错误地替换出去。

最近最久未使用算法（LRU）：这种算法选择最近最长时间未被访问过的页面进行替换。它基于程序的局部性原理，性能较好，但需要额外的硬件支持，如寄存器和栈。

时钟算法（Clock）：这种算法给每一帧关联一个附加位，称为使用位。当某一页首次装入主存时，该帧的使用位设置为1；当该页随后再被访问到时，它的使用位也被置为1。当需要替换一页时，操作系统扫描缓冲区，以查找使用位被置为0的一帧进行替换。

最不常用算法（LFU）：这种算法要求置换具有最小计数的页面。然而，当一个页面在进程的初始阶段大量使用但是随后不再使用时，会出现问题。由于被大量使用,它有一个大的计数,即使不再需要却仍保留在内存中。

以上算法各有优劣，选择合适的页面置换算法取决于具体的应用场景和需求