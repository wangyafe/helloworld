1.在 J2EE 平台上，外部系统称为资源
 1.1 例如，数据库管理系统就是一种 JDBC 资源。每种资源是按其 Java Naming and Directory Interface (JNDI) 名称进行唯一标识的。应用程序通过以下 API 和组件来访问外部系统（技术规范）：
 1.JDBC（Java Database Connectivity）
 2.JNDI（Java Name and Directory Interface）
 JNDIAPI用于执行名字和目录服务。它提供了一致的模型来存取和操作企业级的资源，如DNS和LDAP、本地文件系统、应用服务器中的对象。
 3.EJB（Enterprise JavaBean）
 4.JSP（Java Server Pages）
 JSP页面由HTML代码和嵌入其中的Java代码所组成。服务器在页面被客户端所请求后对页面中的Java代码进行处理，然后将生成的HTML页面返回给客户端的浏览器。
 5.Java Servlet Servlet是一种小型的Java程序，它扩展了Web服务器的功能。
 作为一种服务器端的应用，和CGI脚本类似，当被请求时开始执行。Servlet提供的功能与JSP类似，但实现方式不同。JSP通常在大量的HTML代码中嵌入少量的Java代码，而servlets全部由Java写成并且生成HTML。
 6.RMI/IIOP
 RMI（Remote Method Invocation，远程方法调用）是Java的分布式对象标准，允许位于不同主机上的Java类之间进行通信。Java RMI是个应用程序编程接口（API），还是个分布对象模型；使用RMI，Java程序员可以像调用本地操作一样进行网络调用，从而很容易地构造分布式系统。IIOP协议本来是CORBA的一种传输协议，和RMI结合在一起，使得整合非Java对象变得更加简单。
 7.Java IDL/CORBA
 8.XML（Extensible Markup Language）
 9.JavaMail
 10.JAF（JavaBeans Activation Framework，JavaBeans 激活框架）
 JavaMail利用JAF来处理MIME编码的邮件附件。MIME的字节流可以被转换成Java对象，或者转换自Java对象。大多数应用不需要直接使用JAF。
 11.JMS（Java Message Service）
 JMS是用于和面向消息的中间件相互通信的应用程序接口（API）。它既支持点对点的域，又支持发布/订阅（publish/subscribe）类型的域，并且提供对下列类型的支持：经认可的消息传递、事务型消息的传递、一致性消息和具有持久性的订阅者支持。JMS还提供了与遗留后台系统集成的一种方式。
 12.JTA（Java Transaction Architecture，Java事务构架）
 JTA定义了一种标准的API，应用系统由此可以访问各种事务监控。
 13.JTS（Java Transaction Service，Java事务服务）
 JTS是CORBAOTS事务监控的基本实现。JTS规定了事务管理器的实现方式。该事务管理器是在高层支持 Java Transaction API（JTA）规范，在系统底层实现OMGOTS规范的Java映像。JTS事务管理器为应用服务器、资源管理器、独立的应用以及通信资源管理器等提供事务服务 [4]  。
2.J2EE 平台概述 https://docs.oracle.com/cd/E19159-01/820-4903/abfar/index.html
