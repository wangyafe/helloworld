1.给进程分配虚拟内存空间；
2.创建虚拟地址到物理地址的映射，创建页表
 2.1 CPU 中的 MMU （Memory Management Unit，内存管理单元）就做将虚拟地址转换成物理地址的工作
 2.2 Linux 下，每一页的大小为 4KB
3.加载代码段和数据段等数据，即将硬盘中的文件拷贝到物理内存页中，并在页表中写入映射关系；
4.把可执行文件的入口地址写入到 CPU 的 指令寄存器（PC）中，即可执行程序
5.（用户空间内存段）用户空间内存，从低到高分别是 6 种不同的内存段：
 1.程序文件段（.text），包括二进制可执行代码；
 2.已初始化数据段（.data），包括静态常量；
 3.未初始化数据段（.bss），包括未初始化的静态变量；
 4.堆段，包括动态分配的内存，从低地址开始向上增长。当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减）；
 5.文件映射段，包括动态库、共享内存等，从低地址开始向上增长；
 6.栈段，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是 8 MB。当然系统也提供了参数，以便我们自定义大小；栈段可以通过系统调用自动地扩充空间，但是不能回收空间，所以栈段设置得太大会导致内存泄露
6.【一个程序从编译到运行的全过程】 https://blog.csdn.net/sugar_wolf/article/details/134337339
