1.显卡控制每一帧显示时间
 1.1 时间缩放：GPU 可以通过改变视频帧的显示时间来实现快进效果。这可以通过调整帧率或跳过一些帧来实现。
 1.2 在这个过程中，CPU 和 GPU 之间需要进行有效的通信和协作。具体的实现方式可能会因使用的图形处理框架、API 以及硬件平台的不同而有所差异
 1.3 一些常见的图形处理框架，如 OpenGL 和 Vulkan，提供了相关的功能和接口，使得开发者能够在 GPU 上实现视频的快进操作。 此外，硬件厂商也会提供特定的驱动程序和工具，以支持 CPU 与 GPU 之间的高效数据传输和协同工作。这些驱动程序和工具可以根据硬件的特性进行优化，以提高视频处理的性能和效果。 需要注意的是，视频快进的实现不仅涉及到 CPU 和 GPU 的协作，还可能受到其他因素的影响，如视频编码格式、解码算法、系统资源等。为了获得最佳的视频快进体验，综合考虑这些因素并进行适当的优化是很重要的
2.（1.显示时间由快进速度决定 2.计算过程GPU负责 3.需要快进速度输入到GPU）
 2.1 在一些情况下，快进速度的信息可以直接传递给 GPU，而不一定经过 CPU。这取决于具体的系统架构和软件设计。
 2.2 在现代的计算机系统中，CPU 和 GPU 通常通过特定的接口和总线进行通信。一些图形处理框架和 API 提供了直接与 GPU 交互的机制，允许软件直接将快进速度等信息传递给 GPU，而无需经过 CPU 的中间处理。
 2.3 例如，在一些图形处理 API（如 OpenGL、Vulkan 等）中，开发者可以通过指定相关参数或调用特定的函数来与 GPU 进行直接交互，包括传递快进速度信息。这样可以减少 CPU 的参与，提高数据传输和处理的效率。
 2.5 然而，在其他情况下，CPU 可能仍然在快进速度的传递过程中发挥作用。例如，在一些复杂的应用程序中，CPU 可能负责协调数据的准备、任务的分配以及与 GPU 的通信。
 2.6 最终的实现方式取决于系统的设计和需求。有些系统可能选择通过 CPU 来进行统一的管理和控制，而有些系统则更倾向于直接与 GPU 进行交互，以提高性能和效率。
