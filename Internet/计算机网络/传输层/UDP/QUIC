1.RTT（往返时间） 2.RTO （超时时间）
1.TCP存在的问题
 1.1 升级 TCP 的工作很困难 1.2 TCP 建立连接的延迟 1.3 TCP 存在队头阻塞问题 1.4 网络迁移需要重新建立 TCP 连接
2.TCP 可靠传输的特性（序列号、确认应答、超时重传、流量控制、拥塞控制）在应用层实现一遍
 2.1 要基于 UDP 实现的可靠传输协议，那么就要在应用层下功夫，也就是要设计好协议的头部字段 拿 HTTP/3 举例子，在 UDP 报文头部与 HTTP 消息之间，共有 3 层头部
 2.2 对头阻塞：1.发送窗口的队头阻塞 2.接收窗口的队头阻塞
 2.3 TCP 发送出去的数据，都是需要按序确认的，只有在数据都被按顺序确认完后，发送窗口才会往前滑动。
 2.4 比如下图的发送方把发送窗口内的数据全部都发出去了，（可用窗口）的大小就为 0 了，表明可用窗口耗尽，在没收到 ACK 确认之前是无法继续发送数据了
 2.5 HTTP/2 通过抽象出 Stream 的概念，实现了 HTTP 并发传输，一个 Stream 就代表 HTTP/1.1 里的请求和响应
3.没有队头阻塞的 QUIC
 3.1 QUIC 也借鉴 HTTP/2 里的 Stream 的概念，在一条 QUIC 连接上可以并发发送多个 HTTP 请求 (Stream)。
 3.2 QUIC 给每一个 Stream 都分配了一个独立的滑动窗口，这样使得一个连接上的多个 Stream 之间没有依赖关系，都是相互独立的，各自控制的滑动窗口。
3.字节一面：如何用 UDP 实现可靠传输 https://www.toutiao.com/article/7132339255526965792/?log_from=3b449ea29ca9f_1661001476041
