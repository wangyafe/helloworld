1.链表即类中包含自身
   public class Node<T>{
      private String key;
      private T value;
      private Node<T> next;
      public Node(String key, T value){
        this.key = key;
        this.value = value;
      }
   }
2.双向链表再移除队尾的时候 可以找到倒数第二个 但单向须遍历
3.漫画算法：如何判断链表有环？（快慢指针法） https://zhuanlan.zhihu.com/p/31401474 判断链表是否有环以及返回入环节点（无环最后一个节点指向null） https://segmentfault.com/a/1190000015308120
4.如何找到链表的中间节点（快慢指针法） https://juejin.cn/post/6844904197729714190
5.跳表这种高效的数据结构，值得每一个程序员掌握 https://zhuanlan.zhihu.com/p/54869087
  5.1 多级索引，可以实现二分查找的有序链表就是跳表 2.事件复杂度为O(log2n)
  5.2 Skip List--跳表（全网最详细的跳表文章没有之一）（如何插入元素） https://www.jianshu.com/p/9d8296562806
     1.插入同理查询 2.重建索引 2.1 randomLevel() 方法，随机生成 1~MAX_LEVEL 之间的数（MAX_LEVEL表示索引的最高层数），且有 1/2的概率返回 1、1/4的概率返回 2、1/8的概率返回 3 ... 2.2 randomLevel() 方法返回 1 不建索引、返回2建一级索引、返回 3 建二级索引、返回 4 建三级索引
6.头插法 http://www.cyc2018.xyz/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87%20Offer%20%E9%A2%98%E8%A7%A3/6.%20%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.html#%E9%A2%98%E7%9B%AE%E9%93%BE%E6%8E%A5
7.控制程序运行次数 http://www.cyc2018.xyz/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87%20Offer%20%E9%A2%98%E8%A7%A3/22.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%AC%20K%20%E4%B8%AA%E7%BB%93%E7%82%B9.html#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF
