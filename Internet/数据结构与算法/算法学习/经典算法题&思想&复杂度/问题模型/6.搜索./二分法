1.算法-二分查找法（关键字-快速查找）递归写法 https://blog.csdn.net/qq_38807606/article/details/128591719
public class Main {
    public static void main(String[] args) {
        int[] test = {1,3,5,7,9,18,23,66};
        System.out.println(binarySearch(test,0,test.length - 1,18));
    }
    public static int binarySearch(int[] array, int start, int end, int target){
        int middle = (start + end)/2;
        if(array[middle]==target){
            return middle;
        }
        if(start>=end){
            return -1;
        }
        if(array[middle]>target){
            return binarySearch(array,start,middle-1,target);
        }else {
            return binarySearch(array,middle + 1, end, target);
        }
    }
}
2.二维数组（回溯剪枝）
3.(L+R)/2内存溢出问题(L + (R - L) / 2) https://blog.csdn.net/weixin_38684180/article/details/125633227?share_token=ea7e80b1-1371-4185-bb8f-e14fac5763e5
