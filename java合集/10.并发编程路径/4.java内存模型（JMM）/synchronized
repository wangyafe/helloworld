1.synchronized
 1.1 什么是 happens-before 关系？ https://www.cnblogs.com/muzhongjiang/p/15143313.html?share_token=bd05d68a-4f1b-477e-8e50-79b24b881b20
 1.2 重量级锁相比Lock锁为什么更占用资源 https://www.jianshu.com/p/955a6ef92787
    1.涉及内核态和用户态的切换
    2.再谈synchronized锁升级（直接从偏向锁升级成了重量级锁） https://www.cnblogs.com/trunks2008/p/14646610.html
2.Synchronized解析——如果你愿意一层一层剥开我的心(对象的内存布局) https://juejin.cn/post/6844903918653145102#heading-15
  2.1 面试官：说说多线程并发问题（锁升级原理） https://juejin.cn/post/6844903941830869006#heading-11
  2.2 锁升级原理：（递归锁重入）1.偏向锁：只有一个线程时 比较线程Id(对象头的mark word里) 2.轻量级：在偏向锁的条件下 线程B访问同步代码 比较对象头的线程id不一样，会升级为轻量级锁，并且通过自旋的方式来获取轻量级锁 3.重量级：并发下 转为重量级锁
  2.3 对象内存布局：1.对象头（mark word [1.轻量级锁指针2重量级锁指针3.偏向锁的线程Id4.GC年龄5.hashcode] 2.class point） 2.实例数据（1.类的属性数据信息2.父类的属性信息） 3.对齐填充
  2.4 Synchronized原理：1.同步代码块:monitorEnter+monitorExit指令 和monitor对象 2.同步方法：设置方法标志 +monitor对象
3.偏向锁，轻量级锁与重量级锁的区别与膨胀 https://blog.csdn.net/choukekai/article/details/63688332
  3.1  偏向所锁，轻量级锁都是乐观锁(1.线程仍处于runableh状态 2.cpu仍在运转)，重量级锁是悲观锁（1.线程处于阻塞状态）
