1.
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;

public class ForkJoinTest {
    static class SumTask extends RecursiveTask<List<String>> {
        static final int THRESHOLD = 100;
        long[] array;
        int start;
        int end;

        SumTask(long[] array, int start, int end) {
            this.array = array;
            this.start = start;
            this.end = end;
        }

        @Override
        protected List<String> compute() {
            if (end - start <= THRESHOLD) {
                // 如果任务足够小,直接计算:
                List<String> list = new ArrayList<>();

                for (int i = start; i < end; i++) {
                    list.add(String.valueOf(i));
                }
                return list;
            }
            // 任务太大,一分为二:
            int middle = (end + start) / 2;
            SumTask subtask1 = new SumTask(this.array, start, middle);
            SumTask subtask2 = new SumTask(this.array, middle, end);
            invokeAll(subtask1, subtask2);
//            subtask1.fork();
//            subtask2.fork();
            List<String> subresult1 = subtask1.join();
            List<String> subresult2 = subtask2.join();
            subresult1.addAll(subresult2);
            return subresult1;
        }
    }

    public static void main(String[] args) {
        // 创建随机数组成的数组:
        long[] array = new long[100000];
        fillRandom(array);
        // fork/join task:
        ForkJoinPool fjp = new ForkJoinPool(4); // 最大并发数4
        ForkJoinTask<List<String>> task = new SumTask(array, 0, array.length);
        long startTime = System.currentTimeMillis();
        List<String> result = fjp.invoke(task);
        long endTime = System.currentTimeMillis();
        System.out.println("Fork/join sum: " + result.size() + " in " + (endTime - startTime) + " ms.");
    }

    private static void fillRandom(long[] array) {
        Random random = new Random();
        int bound = 100000;

        for (int i = 0; i < array.length; i++) {
            array[i] = random.nextInt(bound);
        }
    }
}
