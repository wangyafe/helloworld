1.程序计数器
2.java虚拟机栈（栈）
2.1 动态链接：引用 2.2 方法出口：return关键字 2.3 局部变量表 2.4 操作数表 
3.本地方法栈（栈）
4.java堆（堆）
4.1所有实例对象
5.方法区（1.jdk1.8后叫元空间metaspace 2.也叫永久代）
 5.1 常量 5.2 静态变量 5.3 类信息 5.4 即时编译代码
6.JVM会加载class文件，然后加载后的Java类会被存放于方法区(Method Area)中.实际运行时，虚拟机会执行方法区内的代码，JVM会使用堆和栈来存储运行时数据
7.一个“Hello World”理解JVM运行时数据区 https://www.cnblogs.com/junfengchan/p/9250585.html
8.Synchronized解析——如果你愿意一层一层剥开我的心(对象的内存布局) https://juejin.cn/post/6844903918653145102#heading-15
  8.1 面试官：说说多线程并发问题（锁升级原理） https://juejin.cn/post/6844903941830869006#heading-11
  8.2 锁升级原理：1.偏向锁：只有一个线程时 比较线程Id(对象头的mark word里) 2.轻量级：在偏向锁的条件下 线程B访问同步代码 比较对象头的线程id不一样，会升级为轻量级锁，并且通过自旋的方式来获取轻量级锁 3.重量级：并发下 转为重量级锁
  8.3 对象内存布局：1.对象头（mark word [1.轻量级锁指针2重量级锁指针3.偏向锁的线程Id4.GC年龄5.hashcode] 2.class point） 2.实例数据（1.类的属性数据信息2.父类的属性信息） 3.对齐填充
  8.4 Synchronized原理：1.同步代码块:monitorEnter+monitorExit指令 和monitor对象 2.同步方法：设置方法标志 +monitor对象
