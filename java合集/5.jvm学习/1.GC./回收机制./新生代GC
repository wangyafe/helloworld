1.JVM中新生代为什么要有两个Survivor（form,to）？ https://www.zhihu.com/question/44929481
 1.1 用空间换时间，你可以模拟新生代回收两次的场景。假设现在只有一个s区，第一次，e满了之后，你把活得对象放到s，如果此时只有一个s区，那么当第二次e去满了之后，就没有s区可用了
 1.2 为了使第二次GC能够进行所以在只有一个s取得情况下你只能，把s区中的或对象复制一遍放到e区，所以如果有一个s区的话，一次新生代GC要复制两次活对象
 1.3 而在有两个的情况下，这个问题就可以避免了，e区满了之后进行第一次GC，把活的对象放入s0,此时s1区是没被使用的，当第二次GC的时候再把e区中活的对象和s0中活的对象一同放进s1，
 1.4 你有没有发现在一次GC中，两个s区会比一个s区少复制一次
2.关于JVM参数-XX:SurvivorRatio的理解 https://blog.csdn.net/flyfhj/article/details/86630105
 2.1 Eden和Survivor比例有什么标准或要求
  2.1.1 Eden区域设置太小，意味着其空间很快就会被占满，也就是说增加了新生代的GC次数，而频繁的GC会降低整体JVM性能
  2.1.2 过大，因为Survivor区域空间太小无法容纳这些对象，结果大部分幸存对象只在进行一次或很少次的GC后就会被移动到老年代 也就是说从某种程度上来讲失去了MinorGC的初衷
