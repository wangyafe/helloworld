1.局部变量一般定义成基本类型 因为基本类型存储在栈上，方法执行完毕，栈上的内存空间也随之释放（引用类型需要GC才能释放）
 1.1 在某些场合不能使用基本类型必须使用包装类
 1.2 包装类可以为null值，基本类型不能
 1.3 包装类型是引用类型，里面有一些有用的属性和方法
 1.4 数据缓存（Integer来举例，在-128~127区间的数会被缓存，当类加载的时候就创建这256个数对应的对象，并放到名为cache的数组中）
 1.5 判断long类型是否为空_Java包装类型你真的会用吗？ https://blog.csdn.net/weixin_39976748/article/details/110865501
2.Java 自动装箱与拆箱的实现原理 https://www.jianshu.com/p/c32d4082686f
 2.1 自动装箱时编译器调用valueOf将原始类型值转换成对象
 2.2 自动拆箱时，编译器通过调用类似intValue(),doubleValue()这类的方法将对象转换成原始类型值
 2.3 数字运算会做拆箱
 2.4 double、float是浮点型的 无热点数据 无缓存对象
