1.Stream 主要包括对象流和数值流两大类
 1.1 Stream.of() , Arrays.stream() , Collection.stream() ,Stream.generate() , Stream.iterate() 方法创建对象流
 1.2 IntStream.range() 和 IntStream.rangeClosed() 可以创建数值流，对象流和数值流可以相互转换
 1.3 Collector 收集器接口，可以实现归约，统计函数（求和，求平均值，最大值，最小值），分组等功能
 1.4 流的执行，需要调用终值操作。流中每个元素执行到不能继续执行下去，才会转到另一个元素执行。而不是分阶段迭代数据容器中的所有元素！
 1.5 flatMap 可以给流中的每个元素生成一个对应的流，并且扁平化为一个流
2.流处理特性：2.1 不存储数据 2.2不会改变数据源 2.3不可以重复使用
3.java8 中的 Stream 与 I/O 流 InputStream 和 OutputStream 是完全不同的概念。
  3.1 Stream 机制是针对集合迭代器的增强 流允许你用声明式的方式处理数据集合
  3.2 Java8新特性之Steam流式编程https://blog.csdn.net/qq_40280582/article/details/119723102
