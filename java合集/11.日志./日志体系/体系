1.为什么会有JCL和slf4j
 1.1 框架（spring mybatis）所用日志和项目日志统一 保持通用性 目前两种方案：1.Apache Commons Logging（JCL） 2.slf4j
 1.2 JCL(1.门面日志 2.内部实现)默认配置： 如果能找到Log4j 则默认使用log4j 实现，如果没有则使用jul(jdk自带的) 实现，再没有则使用jcl内部提供的SimpleLog 实现（使用其他日志实现需要桥接器）
 1.3 slf4j(1.门面日志 2.无内部实现) 通过桥接器 连接日志实现
 1.4 日志实现（1.jul(jdk内部实现) 2.log4j 3.log4j2 4.logback 5.jcl）
 1.5 jcl和slf4j通过桥接器可以相互连接（原来使用jcl 现在使用slf4j或者 原使用slf4j 现在使用jcl）
 1.6 日志实现通过桥接器相互桥接
 1.7 日志实现Log4j2是完全不兼容Log4j1.x的，它也搞了分离的设计，分化成log4j-api和log4j-core，这个log4j-api也是日志接口，log4j-core是日志实现
 1.8 堆栈溢出问题（有些桥接器不能并存 引起死循环：如jcl-over-slf4j和slf4j-jcl jcl API桥接到slf4j slf4j API桥接到jcl，如果同时引用会导致循环调用，进而导致栈溢出）
 1.9 spring boot默认使用的日志框架就是logback
2.java日志体系详解 http://www.chaiguanxin.com/articles/2019/02/16/1550297267938.html
3.常见的日志框架分析 https://www.cnblogs.com/eaglelihh/p/15003410.html
4.深入掌握Java日志体系，再也不迷路了 https://www.toutiao.com/article/6905026316341527052/?app=news_article&timestamp=1661911125&use_new_style=1&req_id=20220831095845010151076030243944F5&group_id=6905026316341527052&tt_from=android_share&utm_medium=toutiao_android&utm_campaign=client_share&share_token=f1803456-e7e2-41ab-8403-45a2623971ea&source=m_redirect
5.用法和依赖 （Java 日志体系详解 https://blog.51cto.com/u_13294304/4808853 https://gitee.com/ccgx/java-example/tree/master/log）
